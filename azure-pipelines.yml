# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: NuGetToolInstaller@1

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
      
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: CollectCoverage
      inputs:
        command: 'test'
        projects: '**/UnittestTemperature.csproj'
        arguments: '-restore --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
        publishTestResults: true

    - task: PublishCodeCoverageResults@2
      displayName: 'PublishCodeCoverageResults'
      inputs:
        summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: 'BuildImage'
  displayName: 'Build the Image'
  jobs: 
  - job: 'BuildImage'
    displayName: 'Build Image and push'
    pool:
      vmImage: 'ubuntu-latest'

  variables:
    dockerRegistryServiceConnection: 'ACR-DevOps'
    imageRepository: 'a2nacr.azurecr.io'
    dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
    tag: '$(Build.BuildId)'
    
    steps:
    - task: Docker@2
      displayName: 'build and push the docker image'
      inputs:
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
      
